
	Author: code34 nicolas_boiteux@yahoo.fr
	Copyright (C) 2016 Nicolas BOITEUX

	CLASS OO_QUEUE
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>. 

	--------------------------------------------------------------------------------------------------------------

	Function:  _queue = ["new", ""] call OO_QUEUE;
	Create a new Priority queue object
		
	Parameters: nothing
	Return : _queue : OO_QUEUE object

	--------------------------------------------------------------------------------------------------------------

	Function: _array = "toArray" call _queue;
	Return an array containing all the elements of the queue
		
	Parameters: nothing
	Return : _array : array

	--------------------------------------------------------------------------------------------------------------

	Function: "clearQueue" call _queue;
	Removes all of the elements from this priority queue
		
	Parameters: nothing
	Return : nothing

	--------------------------------------------------------------------------------------------------------------

	Function: _bool = "isEmpty" call _queue;
	Test if the priority queue is empty
		
	Parameters: nothing
	Return : _bool : boolean

	--------------------------------------------------------------------------------------------------------------

	Function: _count = "count" call _queue;
	Count the number of elements in the Queue
		
	Parameters: nothing
	Return : _count : scalar

	--------------------------------------------------------------------------------------------------------------

	Function: _element = ["get", ANY] call _queue;
	Get next first in element according its priority, and remove it
	
	Parameters : 
		default return value, if queue is empty
		can be ANY type (ex: STRING, SCALAR, ARRAY, OBJECT, etc)
	
	Return : 
		element : according the type of element in the queue
		or if queue is empty : default return value (according parameters)

	--------------------------------------------------------------------------------------------------------------

	Function: _bool = ["put", _array] call _queue;
	Insert an element in priority queue according its priority
	
	Parameters : _array : [_priority, _element]
		1 - priority - (0 highest priority) - scalar
	 	2 - Element to insert in the queue - can be ANY type (ex: STRING, SCALAR, ARRAY, OBJECT, etc)
	
	Return : boolean, if success

	--------------------------------------------------------------------------------------------------------------
	
	Function:  ["delete", _template] call OO_TEMPLATE;
	Destroy the template object 
		
	Parameters:
		object - template object
	
	Return : nothing